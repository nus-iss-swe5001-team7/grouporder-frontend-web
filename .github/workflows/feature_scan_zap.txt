# ZAP - A full featured free and open source DAST tool 
# that includes both automated scanning for vulnerabilities
# and tools to assist expert manual web app pen testing.

name: "GroupOrder Frontend dast owasp-zap"
on:
  push:
    branches: 
      - 'feature/*'
      - 'develop'
  pull_request:
    branches: 
      - 'feature/*'
      - 'develop'
    types: [opened, synchronize, reopened]

jobs:
  snyk:
    # runs-on: ubuntu-latest
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
           command: monitor

  deploy_staging:
    needs: snyk
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
        
      - name: Build Bundle
        shell: bash
        env: 
          STAGING_MACHINE_ROUTE: ${{ secrets.STAGING_MACHINE_ROUTE }}
        run: |
          npm install
          VUE_APP_STAGING_API="$STAGING_MACHINE_ROUTE" npm run build

      - name: Deploy to Staging Environment
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{secrets.LEN_ARCH_SSH_IP}}
          username: ${{secrets.LEN_ARCH_SSH_USERNAME}}
          password: ${{secrets.LEN_ARCH_SSH_KEY}}
          port: ${{secrets.LEN_ARCH_SSH_PORT}}
          source: "./dist/*"
          target: "project_staging/"

  zap_scan:
    needs: deploy_staging
    runs-on: ubuntu-latest
    name: zap scan the web app
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.GH_TOKEN_ZAP_SCAN}}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: ${{ secrets.WEB_APP_STAGING_ADD }}
          # rules_file_name: '.zap/rules.tsv' # N.A
          cmd_options: '-a'
      - name: Archive staging artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zap report
          path: |
            ./groupfoodorder_zap_baseline_report.html
# https://github.com/marketplace/actions/zap-full-scan
  # owasp_zap:
  #   needs: deploy_staging
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [20.x]

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Change script permission
  #       run: |
  #         chmod +x scripts/zap-script.sh

  #     - name: ZAP scan
  #       run: scripts/zap-script.sh

  #     - name: Archive production artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: zap report
  #         path: |
  #           ./groupfoodorder_zap_baseline_report.html